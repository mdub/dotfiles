#! /usr/bin/env ruby
# frozen_string_literal: true

require "English"
def normalise_url(url)
  raise ArgumentError, "unrecognised URL" unless url =~ %r{^(\w+://)?([0-9a-z-]+(?:\.[0-9a-z-]+)*)?(:\d+)?(/.*)?$}i

  scheme, host, port, path = $LAST_MATCH_INFO.captures
  scheme ||= "http://"
  host ||= "localhost"
  path ||= "/"
  [scheme, host, port, path].join
end

def assert_normalise_url(input, expected)
  actual = begin
    normalise_url(input)
  rescue StandardError
    $ERROR_INFO
  end
  return if actual == expected

  warn %(normalise_url(#{input.inspect}) == #{actual.inspect} # expected #{expected.inspect})
  exit 1
end

assert_normalise_url "http://foo/bar", "http://foo/bar"
assert_normalise_url "foo/bar", "http://foo/bar"
assert_normalise_url "/foo", "http://localhost/foo"
assert_normalise_url "localhost:3000", "http://localhost:3000/"
assert_normalise_url ":3000", "http://localhost:3000/"
assert_normalise_url ":3000/blah", "http://localhost:3000/blah"
assert_normalise_url "foo-bar.baz.com", "http://foo-bar.baz.com/"

url = normalise_url(ARGV.first || "/")
exec("open", url)
